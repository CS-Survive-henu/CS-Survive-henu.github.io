# Deploy VitePress site to GitHub Pages
name: Deploy VitePress site to Pages

on:
  # 触发条件：推送到 main 分支
  push:
    branches: [main]
  # 允许手动触发
  workflow_dispatch:

# 设置权限
permissions:
  contents: read
  pages: write
  id-token: write

# 并发控制
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # 构建作业
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 需要完整历史记录用于 lastUpdated

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install dependencies with fallback
        run: |
          echo "🔧 Installing dependencies..."
          
          # 方法1：尝试 npm ci（最快最可靠）
          if [ -f package-lock.json ]; then
            echo "📦 Trying npm ci..."
            if npm ci --prefer-offline --no-audit; then
              echo "✅ npm ci succeeded"
            else
              echo "❌ npm ci failed, trying alternative methods..."
              rm -rf node_modules package-lock.json
              
              # 方法2：npm install 不使用可选依赖
              echo "📦 Trying npm install without optional dependencies..."
              if npm install --no-optional --prefer-offline; then
                echo "✅ npm install (no-optional) succeeded"
              else
                echo "❌ npm install (no-optional) failed, trying full install..."
                
                # 方法3：完整安装
                echo "📦 Trying full npm install..."
                npm cache clean --force
                npm install --force
                echo "✅ npm install (force) completed"
              fi
            fi
          else
            echo "📦 No package-lock.json found, running npm install..."
            npm install --prefer-offline
          fi
          
          echo "📋 Installed packages:"
          npm list --depth=0

      - name: Build with VitePress
        run: |
          echo "🏗️ Building VitePress site..."
          npm run build
          
          echo "📁 Build output:"
          ls -la docs/.vitepress/dist/
          
          # 创建 .nojekyll 文件以禁用 Jekyll 处理
          touch docs/.vitepress/dist/.nojekyll
          echo "✅ Created .nojekyll file"
          
          # 复制 favicon 到根目录
          if [ -f "favicon.ico" ]; then
            cp favicon.ico docs/.vitepress/dist/
            echo "✅ Copied favicon.ico"
          fi
          
          # 确保资源文件正确复制
          if [ -d "docs/public" ]; then
            cp -r docs/public/* docs/.vitepress/dist/
            echo "✅ Copied public assets"
          fi
          
          echo "🎉 Build completed successfully!"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist

  # 部署作业
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
